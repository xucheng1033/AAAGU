你好
不不不不不不
sada
Creating a new branch is quick2.

Creating a new branch is quick.

$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"
$ git init
$ git add <file>
$ git add --all
$ git commit -m "msg"
//仓库当前的状态
$ git status 
//查看文件具体修改的内容
$ git diff <file>
//查看提交日志
$ git log
$ git log --pretty=oneline
//版本退回上一个版本
$ git reset --hard HEAD^
//版本退回commit id版本
$ git reset --hard <commitId>
//查看你的每一次命令
$ git reflog
//把	文件在工作区的修改全部撤销
$ git checkout -- <file>
//把暂存区的修改撤销掉（unstage），重新放回工作区
$ git reset HEAD <file>
//删除一个文件
$ git rm <file>
创建SSH Key
$ ssh-keygen -t rsa -C "youremail@example.com"
//关联 本地仓库与GitHub仓库
$ git remote add origin git@github.com:<GitHub账户名>/test.git
//关联 本地仓库与GitHub仓库,并把内容推上远程仓库
$ git push -u origin master
//把内容推上远程仓库
$ git push origin master
//把远程仓库的项目拷贝到本地
$ git clone git@github.com:xxx/test.git
//创建并切换到分支
$ git checkout -b <branch name>
切换到分支
$ git checkout  <branch name>
创建本地分支
$ git branch <branch name>
查看分支
$ git branch
合并某分支到当前分支
$ git merge <branch name>
删除分支
$ git branch -d <name>
强行删除分支
$ git branch -D <name>
//查看分支合并图
$ git log --graph --pretty=oneline --abbrev-commit
//合并分支并附带信息
$ git merge --no-ff -m "msg" dev

把当前工作现场“储藏”起来
$ git stash
回到工作现场
$ git stash pop
抓取远程分支的新提交
$ git pull
创建本地分支和远程分支的链接关系
$ git branch --set-upstream branch-name origin/branch-name
查看远程库信息
$ git remote -v
在本地创建和远程分支对应的分支
$ git checkout -b branch-name origin/branch-name
配置命令的别名
$ git config --global alias.<my_cmd> '<cmd>'









//